<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Huris&#39; HeapStack</title>
  
  <subtitle>For you, a thousand times over.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huris.xyz/"/>
  <updated>2019-09-09T15:35:51.050Z</updated>
  <id>http://huris.xyz/</id>
  
  <author>
    <name>Huris</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高数公式</title>
    <link href="http://huris.xyz/2019/09/09/%E9%AB%98%E6%95%B0%E5%85%AC%E5%BC%8F/"/>
    <id>http://huris.xyz/2019/09/09/高数公式/</id>
    <published>2019-09-09T14:14:45.000Z</published>
    <updated>2019-09-09T15:35:51.050Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;不定积分的基本积分公式&lt;/li&gt;
&lt;li&gt;常见泰勒展开式&lt;/li&gt;
&lt;li&gt;和差化积公式&lt;/li&gt;
&lt;li&gt;积化和差公式&lt;/li&gt;
&lt;li&gt;微分中值定理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="数学之美" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    
      <category term="高数公式" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/%E9%AB%98%E6%95%B0%E5%85%AC%E5%BC%8F/"/>
    
    
      <category term="数学" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="高数" scheme="http://huris.xyz/tags/%E9%AB%98%E6%95%B0/"/>
    
      <category term="常见公式" scheme="http://huris.xyz/tags/%E5%B8%B8%E8%A7%81%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>卷积神经网络（CNN）模型结构可视化工具</title>
    <link href="http://huris.xyz/2019/09/01/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>http://huris.xyz/2019/09/01/卷积神经网络（CNN）模型结构可视化工具/</id>
    <published>2019-09-01T13:13:17.000Z</published>
    <updated>2019-09-01T13:18:14.646Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;深度学习中，CNN模型可视化有助于我们学习、分析网络模型。目前接触到的可视化有：特征图可视化、网络模型结构可视化。本文为大家介绍的就是网络模型结构可视化的两款小工具。&lt;/p&gt;
&lt;h2 id=&quot;可视化工具&quot;&gt;&lt;a href=&quot;#可视化工具&quot; class=&quot;headerlink&quot; title=&quot;可视化工具&quot;&gt;&lt;/a&gt;可视化工具&lt;/h2&gt;&lt;p&gt;本文主要介绍Netscope和ConvNetDraw。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机工具" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/"/>
    
      <category term="网络模型结构可视化工具" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="CNN" scheme="http://huris.xyz/tags/CNN/"/>
    
      <category term="模型结构" scheme="http://huris.xyz/tags/%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84/"/>
    
      <category term="可视化工具" scheme="http://huris.xyz/tags/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>How a Kalman filter works, in pictures</title>
    <link href="http://huris.xyz/2019/08/30/How-a-Kalman-filter-works-in-pictures/"/>
    <id>http://huris.xyz/2019/08/30/How-a-Kalman-filter-works-in-pictures/</id>
    <published>2019-08-30T08:38:41.000Z</published>
    <updated>2019-08-30T12:12:00.340Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I have to tell you about the Kalman filter, because what it does is pretty damn amazing.&lt;/p&gt;
&lt;p&gt;Surprisingly few software engineers and scientists seem to know about it, and that makes me sad because it is such a general and powerful tool for &lt;strong&gt;combining information&lt;/strong&gt; in the presence of uncertainty. At times its ability to extract accurate information seems almost magical— and if it sounds like I’m talking this up too much, then take a look at &lt;a href=&quot;https://www.bzarg.com/p/improving-imu-attitude-estimates-with-velocity-data&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;this previously posted video&lt;/a&gt; where I demonstrate a Kalman filter figuring out the &lt;em&gt;orientation&lt;/em&gt; of a free-floating body by looking at its &lt;em&gt;velocity&lt;/em&gt;. Totally neat!&lt;/p&gt;
    
    </summary>
    
      <category term="常见模型" scheme="http://huris.xyz/categories/%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="卡尔曼滤波" scheme="http://huris.xyz/categories/%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/"/>
    
    
      <category term="卡尔曼滤波" scheme="http://huris.xyz/tags/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-101-对称二叉树</title>
    <link href="http://huris.xyz/2019/08/28/leetcode-101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://huris.xyz/2019/08/28/leetcode-101-对称二叉树/</id>
    <published>2019-08-28T00:53:29.000Z</published>
    <updated>2019-09-09T14:53:27.769Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定一个二叉树，检查它是否是镜像对称的。&lt;/p&gt;
&lt;p&gt;例如，二叉树 &lt;code&gt;[1,2,2,3,4,4,3]&lt;/code&gt; 是对称的。&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;figure class=&quot;hljs highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c++&quot;&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br&gt;   / \&lt;br&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br&gt; / \ / \&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是下面这个 &lt;code&gt;[1,2,2,null,3,null,3]&lt;/code&gt;则不是镜像对称的:&lt;/p&gt;
&lt;figure class=&quot;hljs highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c++&quot;&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br&gt; / \&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br&gt; \   \&lt;br&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://huris.xyz/tags/LeetCode/"/>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二叉树" scheme="http://huris.xyz/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="对称" scheme="http://huris.xyz/tags/%E5%AF%B9%E7%A7%B0/"/>
    
  </entry>
  
  <entry>
    <title>反向传播算法</title>
    <link href="http://huris.xyz/2019/08/26/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/"/>
    <id>http://huris.xyz/2019/08/26/反向传播算法/</id>
    <published>2019-08-26T00:30:24.000Z</published>
    <updated>2019-08-26T06:24:20.211Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;卷积神经网络是一种特殊的前馈神经网络，通常也是一种深度神经网络。&lt;/p&gt;
&lt;p&gt;深度学习是在克服反向传播算法对深度神经网络的训练困难过程中逐步发展和建立起来的。而深度神经网络的基本学习训练方法是反向传播算法。&lt;/p&gt;
&lt;p&gt;作为一种有监督学习的算法，反向传播算法在本质上是一种具有递归结构的梯度下降算法，往往需要给定足够多的训练样本，才能获得满意的效果。&lt;/p&gt;
&lt;p&gt;下面先给出任意前馈神经网络的&lt;strong&gt;通用反向传播算法&lt;/strong&gt;，再讨论深层神经网络的&lt;strong&gt;逐层反向传播算法&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="反向传播" scheme="http://huris.xyz/tags/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>梯度下降算法</title>
    <link href="http://huris.xyz/2019/08/25/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95/"/>
    <id>http://huris.xyz/2019/08/25/梯度下降算法/</id>
    <published>2019-08-25T10:33:42.000Z</published>
    <updated>2019-08-26T06:24:29.740Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;梯度下降算法，又称为最速下降算法，是在无约束条件下计算连续可微函数极小值的基本方法。&lt;/p&gt;
&lt;p&gt;这种方法的核心思想是用负梯度方向作为下降方向，在1874年由法国科学家Cauchy提出。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="梯度下降" scheme="http://huris.xyz/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/"/>
    
  </entry>
  
  <entry>
    <title>激活函数</title>
    <link href="http://huris.xyz/2019/08/24/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/"/>
    <id>http://huris.xyz/2019/08/24/激活函数/</id>
    <published>2019-08-24T04:04:12.000Z</published>
    <updated>2019-08-25T00:23:31.883Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一些常见的激活函数&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="激活函数" scheme="http://huris.xyz/tags/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-26-删除排序数组中的重复项</title>
    <link href="http://huris.xyz/2019/08/24/leetcode-26-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/"/>
    <id>http://huris.xyz/2019/08/24/leetcode-26-删除排序数组中的重复项/</id>
    <published>2019-08-24T01:00:00.000Z</published>
    <updated>2019-08-24T09:19:54.730Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。&lt;/p&gt;
&lt;p&gt;不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定数组 nums = [1,1,2], &lt;/p&gt;
&lt;p&gt;函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 &lt;/p&gt;
&lt;p&gt;你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例2：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定 nums = [0,0,1,1,1,2,2,3,3,4],&lt;/p&gt;
&lt;p&gt;函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。&lt;/p&gt;
&lt;p&gt;你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;为什么返回数值是整数，但输出的答案是数组呢?&lt;/p&gt;
&lt;p&gt;请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。&lt;/p&gt;
&lt;p&gt;你可以想象内部操作如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝&lt;br&gt;int len = removeDuplicates(nums);&lt;/p&gt;
&lt;p&gt;// 在函数里修改输入数组对于调用者是可见的。&lt;br&gt;// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。&lt;br&gt;for (int i = 0; i &amp;lt; len; i++) {&lt;br&gt;   print(nums[i]);&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://huris.xyz/tags/LeetCode/"/>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="删除重复" scheme="http://huris.xyz/tags/%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-7-整数反转</title>
    <link href="http://huris.xyz/2019/08/23/leetcode-7-%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/"/>
    <id>http://huris.xyz/2019/08/23/leetcode-7-整数反转/</id>
    <published>2019-08-23T13:06:40.000Z</published>
    <updated>2019-08-24T09:20:01.024Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给出一个32位的有符号整数，你需要将这个整数中每位上的数字进行反转。&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：123&lt;/p&gt;
&lt;p&gt;输出：321&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例2：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：-123&lt;/p&gt;
&lt;p&gt;输出：-321&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例3：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：120&lt;/p&gt;
&lt;p&gt;输出：21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;假设我们的环境只能存储得下32位的有符号整数，则其数值范围为$[-2^{31}, 2^{31}-1]$。请根据这个假设，如果反转后整数溢出那么就返回0&lt;/p&gt;
    
    </summary>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://huris.xyz/tags/LeetCode/"/>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="溢出边界" scheme="http://huris.xyz/tags/%E6%BA%A2%E5%87%BA%E8%BE%B9%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程挑战任务：车道检测</title>
    <link href="http://huris.xyz/2019/08/16/Python-OpenCV%E6%95%99%E7%A8%8B%E6%8C%91%E6%88%98%E4%BB%BB%E5%8A%A1%EF%BC%9A%E8%BD%A6%E9%81%93%E6%A3%80%E6%B5%8B/"/>
    <id>http://huris.xyz/2019/08/16/Python-OpenCV教程挑战任务：车道检测/</id>
    <published>2019-08-16T07:43:21.000Z</published>
    <updated>2019-08-20T13:21:26.781Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;挑战任务：实际公路的车道线检测。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="项目" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="车道检测" scheme="http://huris.xyz/tags/%E8%BD%A6%E9%81%93%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>目标检测背景</title>
    <link href="http://huris.xyz/2019/08/16/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E8%83%8C%E6%99%AF/"/>
    <id>http://huris.xyz/2019/08/16/目标检测背景/</id>
    <published>2019-08-16T06:41:04.000Z</published>
    <updated>2019-08-22T08:10:52.431Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;图像分类，检测及分割是计算机视觉领域的三大任务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;图像分类模型是将图像划分为单个类别，通常对应于图像中最突出的物体。但在现实世界的很多图片通常包含不只一个物体，此时如果使用图像分类模型为图像分配一个单一标签其实是非常粗糙的，并不准确。&lt;/p&gt;
&lt;p&gt;对于这样的情况，就需要目标检测模型，目标检测模型可以识别一张图片的多个物体，并可以定位出不同物体（给出边界框）。&lt;/p&gt;
&lt;p&gt;目标检测在很多场景有用，如无人驾驶和安防系统。&lt;/p&gt;
&lt;p&gt;以下是图像分类，目标检测与实例分割的对比。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://huris.oss-cn-hangzhou.aliyuncs.com/blog/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E5%9B%BE%E5%83%8F%E5%88%86%E7%B1%BB%EF%BC%8C%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E5%89%B2%E7%9A%84%E5%AF%B9%E6%AF%94.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="目标检测" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="目标检测" scheme="http://huris.xyz/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
      <category term="背景" scheme="http://huris.xyz/tags/%E8%83%8C%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>YOLO原理与实现</title>
    <link href="http://huris.xyz/2019/08/16/YOLO%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>http://huris.xyz/2019/08/16/YOLO原理与实现/</id>
    <published>2019-08-16T06:28:55.000Z</published>
    <updated>2019-08-16T06:40:48.352Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了YOLO算法&lt;/p&gt;
&lt;p&gt;其全称是：You Only Look Once: Unified, Real-Time Object Detection&lt;/p&gt;
&lt;p&gt;该名称基本上把Yolo算法的特点都概括全了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You Only Look Once：只需要一次CNN运算&lt;/li&gt;
&lt;li&gt;Unified：一个统一的框架，提供end-to-end的预测&lt;/li&gt;
&lt;li&gt;Real-Time：Yolo算法速度快&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="基本模型" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E5%9F%BA%E6%9C%AC%E6%A8%A1%E5%9E%8B/"/>
    
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="基本模型" scheme="http://huris.xyz/tags/%E5%9F%BA%E6%9C%AC%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="YOLO" scheme="http://huris.xyz/tags/YOLO/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程17：霍夫变换</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B17%EF%BC%9A%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程17：霍夫变换/</id>
    <published>2019-08-15T12:53:51.000Z</published>
    <updated>2019-08-15T14:09:36.638Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习使用霍夫变换识别出图像中的直线和圆等几何形状。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解霍夫变换的实现&lt;/li&gt;
&lt;li&gt;分别使用霍夫线变换和圆变换检测图像中的直线和圆&lt;/li&gt;
&lt;li&gt;OpenCV函数：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.HoughLines()&lt;/code&gt;：霍夫直线变换（整条直线）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.HoughLinesP()&lt;/code&gt;：统计概率霍夫直线变换&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.HoughCircles()&lt;/code&gt;：霍夫圆变换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="霍夫变换" scheme="http://huris.xyz/tags/%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程16：模板匹配</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B16%EF%BC%9A%E6%A8%A1%E6%9D%BF%E5%8C%B9%E9%85%8D/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程16：模板匹配/</id>
    <published>2019-08-15T12:22:06.000Z</published>
    <updated>2019-08-15T12:53:25.991Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习使用模板匹配在图像中寻找物体。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用模板匹配在图像中寻找物体，在大图中找小图&lt;/li&gt;
&lt;li&gt;OpenCV函数&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.matchTemplate()&lt;/code&gt;：进行模板匹配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.minMaxLoc()&lt;/code&gt;：得到最大匹配值的坐标，以这个点为左上角角点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="模板匹配" scheme="http://huris.xyz/tags/%E6%A8%A1%E6%9D%BF%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程15：直方图</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B15%EF%BC%9A%E7%9B%B4%E6%96%B9%E5%9B%BE/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程15：直方图/</id>
    <published>2019-08-15T11:42:01.000Z</published>
    <updated>2019-08-15T12:20:20.991Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习计算并绘制直方图，直方图均衡化等。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算并绘制直方图&lt;/li&gt;
&lt;li&gt;（自适应）直方图均衡化&lt;/li&gt;
&lt;li&gt;OpenCV函数：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.calcHist()&lt;/code&gt;：计算直方图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.equalizeHist()&lt;/code&gt;：均衡化直方图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;均衡化用来使图像的直方图分布更加均匀，提升亮度和对比度。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="直方图" scheme="http://huris.xyz/tags/%E7%9B%B4%E6%96%B9%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程14：轮廓特征</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B14%EF%BC%9A%E8%BD%AE%E5%BB%93%E7%89%B9%E5%BE%81/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程14：轮廓特征/</id>
    <published>2019-08-15T09:26:16.000Z</published>
    <updated>2019-08-15T11:41:51.057Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习计算轮廓特征，如面积、周长、最小外接矩形等。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算物体的周长、面积、质心、最小外接矩形等&lt;/li&gt;
&lt;li&gt;OpenCV函数：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.contourArea()&lt;/code&gt;：面积&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.arcLength()&lt;/code&gt;：周长&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.boundingRect()&lt;/code&gt;：外接矩&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.minAreaRect()&lt;/code&gt;：最小外接矩&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.minEnclosingCircle()&lt;/code&gt;：最小外接圆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.matchShapes()&lt;/code&gt;：进行形状匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="轮廓" scheme="http://huris.xyz/tags/%E8%BD%AE%E5%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程番外篇11：凸包及更多轮廓特征</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B%E7%95%AA%E5%A4%96%E7%AF%8711%EF%BC%9A%E5%87%B8%E5%8C%85%E5%8F%8A%E6%9B%B4%E5%A4%9A%E8%BD%AE%E5%BB%93%E7%89%B9%E5%BE%81/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程番外篇11：凸包及更多轮廓特征/</id>
    <published>2019-08-15T09:10:13.000Z</published>
    <updated>2019-08-15T09:24:21.473Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;计算凸包及更多轮廓特征。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程番外篇10：轮廓层级</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B%E7%95%AA%E5%A4%96%E7%AF%8710%EF%BC%9A%E8%BD%AE%E5%BB%93%E5%B1%82%E7%BA%A7/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程番外篇10：轮廓层级/</id>
    <published>2019-08-15T08:14:47.000Z</published>
    <updated>2019-08-15T08:44:44.396Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;了解轮廓间的层级关系。&lt;/p&gt;
&lt;p&gt;前面我们使用&lt;code&gt;cv2.findContours()&lt;/code&gt;寻找轮廓时，参数3表示轮廓的寻找方式(RetrievalModes)，当时我们传入的是cv2.RETR_TREE，它表示什么意思呢？另外，函数返回值hierarchy有什么用途呢？&lt;/p&gt;
&lt;p&gt;下面我们就来研究下这两个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="轮廓层级" scheme="http://huris.xyz/tags/%E8%BD%AE%E5%BB%93%E5%B1%82%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程13：轮廓</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B13%EF%BC%9A%E8%BD%AE%E5%BB%93/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程13：轮廓/</id>
    <published>2019-08-15T07:57:27.000Z</published>
    <updated>2019-08-15T08:14:15.388Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习如何寻找并绘制轮廓。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解轮廓的概念&lt;/li&gt;
&lt;li&gt;寻找并绘制轮廓&lt;/li&gt;
&lt;li&gt;OpenCV函数：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.findContours()&lt;/code&gt;：寻找轮廓&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.drawContours()&lt;/code&gt;：绘制轮廓&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="轮廓" scheme="http://huris.xyz/tags/%E8%BD%AE%E5%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Python+OpenCV教程12：腐蚀与膨胀</title>
    <link href="http://huris.xyz/2019/08/15/Python-OpenCV%E6%95%99%E7%A8%8B12%EF%BC%9A%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/"/>
    <id>http://huris.xyz/2019/08/15/Python-OpenCV教程12：腐蚀与膨胀/</id>
    <published>2019-08-15T00:56:57.000Z</published>
    <updated>2019-08-15T08:00:50.292Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习常用形态学操作：腐蚀膨胀，开运算和闭运算。&lt;/p&gt;
&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解形态学操作的概念&lt;/li&gt;
&lt;li&gt;学习膨胀、腐蚀、开运算和闭运算等形态学操作&lt;/li&gt;
&lt;li&gt;OpenCV：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cv2.erode()&lt;/code&gt;：腐蚀函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.dilate()&lt;/code&gt;：膨胀函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cv2.morphologyEx()&lt;/code&gt;：开闭运算函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;形态学操作就是改变物体的形状，如腐蚀使物体”变瘦”，膨胀使物体”变胖”&lt;/p&gt;
&lt;p&gt;先腐蚀后膨胀会分离物体，所以叫开运算，常用来&lt;strong&gt;去除小区域物体&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;先膨胀后腐蚀会&lt;strong&gt;消除物体内的小洞&lt;/strong&gt;，所以叫闭运算。&lt;/p&gt;
&lt;p&gt;开/闭理解了之后很容易记忆噢(⊙o⊙)。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机视觉" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/"/>
    
      <category term="教程" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://huris.xyz/tags/Python/"/>
    
      <category term="OpenCV" scheme="http://huris.xyz/tags/OpenCV/"/>
    
      <category term="计算机视觉" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
      <category term="图像处理" scheme="http://huris.xyz/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="形态学" scheme="http://huris.xyz/tags/%E5%BD%A2%E6%80%81%E5%AD%A6/"/>
    
      <category term="腐蚀" scheme="http://huris.xyz/tags/%E8%85%90%E8%9A%80/"/>
    
      <category term="膨胀" scheme="http://huris.xyz/tags/%E8%86%A8%E8%83%80/"/>
    
  </entry>
  
</feed>
