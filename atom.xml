<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Huris&#39; HeapStack</title>
  
  <subtitle>For you, a thousand times over.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huris.xyz/"/>
  <updated>2020-07-07T02:10:22.393Z</updated>
  <id>http://huris.xyz/</id>
  
  <author>
    <name>Huris</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程序员画图软件Graphviz</title>
    <link href="http://huris.xyz/2020/07/07/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%94%BB%E5%9B%BE%E8%BD%AF%E4%BB%B6Graphviz/"/>
    <id>http://huris.xyz/2020/07/07/程序员画图软件Graphviz/</id>
    <published>2020-07-07T01:30:00.000Z</published>
    <updated>2020-07-07T02:10:22.393Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Graphviz 是英文“Graph Visualization”的缩略词，是一个开源的，跨平台的自动绘图工具，&lt;a href=&quot;http://www.graphviz.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphviz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;，&lt;a href=&quot;https://huris.oss-cn-hangzhou.aliyuncs.com/blog/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/graphviz/dotguide.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机工具" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Graphviz" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/Graphviz/"/>
    
    
      <category term="画图" scheme="http://huris.xyz/tags/%E7%94%BB%E5%9B%BE/"/>
    
      <category term="计算机工具" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Taichi编程语言学习</title>
    <link href="http://huris.xyz/2020/06/03/Taichi%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://huris.xyz/2020/06/03/Taichi编程语言学习/</id>
    <published>2020-06-03T12:26:19.000Z</published>
    <updated>2020-07-02T12:08:39.472Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文是基于GAMES201：高级物理引擎实战指南，学习编程语言Taichi所记录的部分例子代码。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机图形学" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="Taichi" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/Taichi/"/>
    
    
      <category term="计算机图形学" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="编程语言" scheme="http://huris.xyz/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Taichi" scheme="http://huris.xyz/tags/Taichi/"/>
    
  </entry>
  
  <entry>
    <title>直线扫描转换算法</title>
    <link href="http://huris.xyz/2020/05/29/%E7%9B%B4%E7%BA%BF%E6%89%AB%E6%8F%8F%E8%BD%AC%E6%8D%A2%E7%AE%97%E6%B3%95/"/>
    <id>http://huris.xyz/2020/05/29/直线扫描转换算法/</id>
    <published>2020-05-29T09:41:27.000Z</published>
    <updated>2020-06-01T12:39:15.801Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;数值微分算法(DDA)，Bresenham算法。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机图形学" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="算法" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="计算机图形学" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="直线生成" scheme="http://huris.xyz/tags/%E7%9B%B4%E7%BA%BF%E7%94%9F%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL绘制一个三角形</title>
    <link href="http://huris.xyz/2020/05/29/OpenGL%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <id>http://huris.xyz/2020/05/29/OpenGL绘制一个三角形/</id>
    <published>2020-05-29T09:12:56.000Z</published>
    <updated>2020-05-29T09:18:34.723Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍了如何用OpenGL绘制一个三角形，大致分为5个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化: 初始化GLFW和GLAD&lt;/li&gt;
&lt;li&gt;数据处理: 生成和绑定VBO和VAO, 设置属性指针&lt;/li&gt;
&lt;li&gt;着色器: 顶点和片段着色器&lt;/li&gt;
&lt;li&gt;渲染&lt;/li&gt;
&lt;li&gt;善后工作&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="计算机图形学" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="OpenGL" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/OpenGL/"/>
    
      <category term="应用" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/OpenGL/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="OpenGL" scheme="http://huris.xyz/tags/OpenGL/"/>
    
      <category term="计算机图形学" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>向量</title>
    <link href="http://huris.xyz/2020/05/19/%E5%90%91%E9%87%8F/"/>
    <id>http://huris.xyz/2020/05/19/向量/</id>
    <published>2020-05-19T07:06:00.000Z</published>
    <updated>2020-05-29T03:47:57.951Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍了向量的一些基本性质、内积(点积/标量积)、外积(叉积/向量积)、向量空间(Gram-Schmidt正交化算法)。&lt;/p&gt;
    
    </summary>
    
      <category term="数学之美" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    
      <category term="线性代数" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
    
      <category term="向量" scheme="http://huris.xyz/tags/%E5%90%91%E9%87%8F/"/>
    
      <category term="数学" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="线性代数" scheme="http://huris.xyz/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>矩阵</title>
    <link href="http://huris.xyz/2020/05/19/%E7%9F%A9%E9%98%B5/"/>
    <id>http://huris.xyz/2020/05/19/矩阵/</id>
    <published>2020-05-19T06:53:01.000Z</published>
    <updated>2020-07-24T03:06:48.461Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了矩阵的基本性质、线性方程组&lt;/p&gt;
    
    </summary>
    
      <category term="数学之美" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    
      <category term="线性代数" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
    
      <category term="数学" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="线性代数" scheme="http://huris.xyz/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
      <category term="矩阵" scheme="http://huris.xyz/tags/%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>OpenMP并行编程指南</title>
    <link href="http://huris.xyz/2020/04/20/OpenMP%E5%B9%B6%E8%A1%8C%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/"/>
    <id>http://huris.xyz/2020/04/20/OpenMP并行编程指南/</id>
    <published>2020-04-20T06:55:52.000Z</published>
    <updated>2020-05-15T02:21:03.280Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;OpenMP主要用于C/C++的CPU并行计算。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>unity学习</title>
    <link href="http://huris.xyz/2020/03/22/unity%E5%AD%A6%E4%B9%A0/"/>
    <id>http://huris.xyz/2020/03/22/unity学习/</id>
    <published>2020-03-22T15:36:33.000Z</published>
    <updated>2020-03-22T15:38:26.335Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;a
        
      
    
    </summary>
    
      <category term="计算机图形学" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="unity" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/unity/"/>
    
    
      <category term="计算机图形学" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="unity" scheme="http://huris.xyz/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>LearnOpenGL</title>
    <link href="http://huris.xyz/2020/02/27/LearnOpenGL/"/>
    <id>http://huris.xyz/2020/02/27/LearnOpenGL/</id>
    <published>2020-02-27T05:20:56.000Z</published>
    <updated>2020-05-15T05:09:42.056Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要总结了我在《LearnOpenGL》中学习的过程&lt;/p&gt;
    
    </summary>
    
      <category term="计算机图形学" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
      <category term="框架" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="OpenGL" scheme="http://huris.xyz/tags/OpenGL/"/>
    
      <category term="计算机图形学" scheme="http://huris.xyz/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>ICthroughVR: Illuminating Cataracts through Virtual Reality</title>
    <link href="http://huris.xyz/2019/12/21/ICthroughVR-Illuminating-Cataracts-through-Virtual-Reality/"/>
    <id>http://huris.xyz/2019/12/21/ICthroughVR-Illuminating-Cataracts-through-Virtual-Reality/</id>
    <published>2019-12-21T01:44:19.000Z</published>
    <updated>2019-12-23T06:27:15.065Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ICthroughVR: Illuminating(照亮) Cataracts(白内障) through Virtual Reality&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://huris.oss-cn-hangzhou.aliyuncs.com/blog/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/ICthroughVR%3A%20Illuminating%20Cataracts%20through%20Virtual%20Reality/Figure%201.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Vision impairments, such as cataracts, affect the way many people interact with their environment, yet are rarely considered by &lt;strong&gt;architects and lighting designers&lt;/strong&gt; because of a lack of design tools.&lt;/p&gt;
&lt;p&gt;we present a method to &lt;strong&gt;simulate vision impairments&lt;/strong&gt;, in particular cataracts, graphically in virtual reality (VR), using eye tracking for gaze-dependent(注视) effects. &lt;/p&gt;
&lt;p&gt;We also conduct(进行) a VR user study to &lt;strong&gt;investigate the effects of lighting on visual perception(感知) for users with cataracts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In contrast to existing approaches, &lt;strong&gt;which mostly provide only simplified simulations and are primarily targeted at educational or demonstrative(示范) purposes&lt;/strong&gt;, we account for the user’s vision and the hardware constraints(限制) of the VR headset.&lt;/p&gt;
&lt;p&gt;This makes it possible to calibrate(矫正) our cataract simulation to the same level of degraded(降低) vision for all participants. &lt;/p&gt;
&lt;p&gt;Our study results show that we are able to calibrate(矫正) the vision of all our participants to a similar level of impairment, that maximum recognition distances for escape route signs with simulated cataracts are significantly smaller than without, and that luminaires(灯具) visible in the field of view are perceived as especially disturbing due to the glare effects they create.&lt;/p&gt;
&lt;p&gt;In addition, the results show that our realistic simulation increases the understanding of how people with cataracts see and could therefore also be informative for health care personnel or relatives of cataract patients.&lt;/p&gt;
    
    </summary>
    
      <category term="论文阅读" scheme="http://huris.xyz/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
      <category term="虚拟现实" scheme="http://huris.xyz/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9E/"/>
    
    
      <category term="虚拟现实" scheme="http://huris.xyz/tags/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9E/"/>
    
      <category term="医疗康复" scheme="http://huris.xyz/tags/%E5%8C%BB%E7%96%97%E5%BA%B7%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>彻底理解红黑树</title>
    <link href="http://huris.xyz/2019/09/20/%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    <id>http://huris.xyz/2019/09/20/彻底理解红黑树/</id>
    <published>2019-09-20T13:38:58.000Z</published>
    <updated>2019-09-20T15:46:36.423Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;当在10亿数据中只需要进行10几次比较就能查找到目标时，不禁感叹编程之魅力！人类之伟大呀！ —— 学红黑树有感。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;红黑树是一种比较难的数据结构，要完全搞懂非常耗时耗力，红黑树怎么自平衡？什么时候需要左旋或右旋？插入和删除破坏了树的平衡后怎么处理？等等问题。&lt;/p&gt;
&lt;p&gt;本文将通过图文的方式讲解红黑树的知识点，并且不会涉及到任何代码，相信我，在懂得红黑树实现原理前，看代码会一头雾水的，当原理懂了，代码也就按部就班写而已，没任何难度。&lt;/p&gt;
&lt;p&gt;阅读本文需要具备知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二叉查找树&lt;/li&gt;
&lt;li&gt;完美平衡二叉树&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://huris.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://huris.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="红黑树" scheme="http://huris.xyz/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
      <category term="数据结构" scheme="http://huris.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>线性代数公式</title>
    <link href="http://huris.xyz/2019/09/10/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%85%AC%E5%BC%8F/"/>
    <id>http://huris.xyz/2019/09/10/线性代数公式/</id>
    <published>2019-09-09T23:58:42.000Z</published>
    <updated>2019-09-10T00:23:00.990Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;矩阵的秩&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="数学之美" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    
      <category term="数学公式" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
    
      <category term="数学" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="高数" scheme="http://huris.xyz/tags/%E9%AB%98%E6%95%B0/"/>
    
      <category term="数学公式" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>高数公式</title>
    <link href="http://huris.xyz/2019/09/09/%E9%AB%98%E6%95%B0%E5%85%AC%E5%BC%8F/"/>
    <id>http://huris.xyz/2019/09/09/高数公式/</id>
    <published>2019-09-09T14:14:45.000Z</published>
    <updated>2019-09-09T23:59:36.044Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;不定积分的基本积分公式&lt;/li&gt;
&lt;li&gt;定积分的性质&lt;/li&gt;
&lt;li&gt;常见泰勒展开式&lt;/li&gt;
&lt;li&gt;和差化积公式&lt;/li&gt;
&lt;li&gt;积化和差公式&lt;/li&gt;
&lt;li&gt;微分中值定理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="数学之美" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/"/>
    
      <category term="数学公式" scheme="http://huris.xyz/categories/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
    
      <category term="数学" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="高数" scheme="http://huris.xyz/tags/%E9%AB%98%E6%95%B0/"/>
    
      <category term="数学公式" scheme="http://huris.xyz/tags/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>卷积神经网络（CNN）模型结构可视化工具</title>
    <link href="http://huris.xyz/2019/09/01/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88CNN%EF%BC%89%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>http://huris.xyz/2019/09/01/卷积神经网络（CNN）模型结构可视化工具/</id>
    <published>2019-09-01T13:13:17.000Z</published>
    <updated>2019-09-01T13:18:14.646Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;深度学习中，CNN模型可视化有助于我们学习、分析网络模型。目前接触到的可视化有：特征图可视化、网络模型结构可视化。本文为大家介绍的就是网络模型结构可视化的两款小工具。&lt;/p&gt;
&lt;h2 id=&quot;可视化工具&quot;&gt;&lt;a href=&quot;#可视化工具&quot; class=&quot;headerlink&quot; title=&quot;可视化工具&quot;&gt;&lt;/a&gt;可视化工具&lt;/h2&gt;&lt;p&gt;本文主要介绍Netscope和ConvNetDraw。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机工具" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/"/>
    
      <category term="网络模型结构可视化工具" scheme="http://huris.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="CNN" scheme="http://huris.xyz/tags/CNN/"/>
    
      <category term="模型结构" scheme="http://huris.xyz/tags/%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84/"/>
    
      <category term="可视化工具" scheme="http://huris.xyz/tags/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>How a Kalman filter works, in pictures</title>
    <link href="http://huris.xyz/2019/08/30/How-a-Kalman-filter-works-in-pictures/"/>
    <id>http://huris.xyz/2019/08/30/How-a-Kalman-filter-works-in-pictures/</id>
    <published>2019-08-30T08:38:41.000Z</published>
    <updated>2019-08-30T12:12:00.340Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I have to tell you about the Kalman filter, because what it does is pretty damn amazing.&lt;/p&gt;
&lt;p&gt;Surprisingly few software engineers and scientists seem to know about it, and that makes me sad because it is such a general and powerful tool for &lt;strong&gt;combining information&lt;/strong&gt; in the presence of uncertainty. At times its ability to extract accurate information seems almost magical— and if it sounds like I’m talking this up too much, then take a look at &lt;a href=&quot;https://www.bzarg.com/p/improving-imu-attitude-estimates-with-velocity-data&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;this previously posted video&lt;/a&gt; where I demonstrate a Kalman filter figuring out the &lt;em&gt;orientation&lt;/em&gt; of a free-floating body by looking at its &lt;em&gt;velocity&lt;/em&gt;. Totally neat!&lt;/p&gt;
    
    </summary>
    
      <category term="常见模型" scheme="http://huris.xyz/categories/%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="卡尔曼滤波" scheme="http://huris.xyz/categories/%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/"/>
    
    
      <category term="卡尔曼滤波" scheme="http://huris.xyz/tags/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-101-对称二叉树</title>
    <link href="http://huris.xyz/2019/08/28/leetcode-101-%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://huris.xyz/2019/08/28/leetcode-101-对称二叉树/</id>
    <published>2019-08-28T00:53:29.000Z</published>
    <updated>2019-09-09T14:53:27.769Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定一个二叉树，检查它是否是镜像对称的。&lt;/p&gt;
&lt;p&gt;例如，二叉树 &lt;code&gt;[1,2,2,3,4,4,3]&lt;/code&gt; 是对称的。&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;figure class=&quot;hljs highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c++&quot;&gt;    &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br&gt;   / \&lt;br&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br&gt; / \ / \&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是下面这个 &lt;code&gt;[1,2,2,null,3,null,3]&lt;/code&gt;则不是镜像对称的:&lt;/p&gt;
&lt;figure class=&quot;hljs highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c++&quot;&gt;  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br&gt; / \&lt;br&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br&gt; \   \&lt;br&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://huris.xyz/tags/LeetCode/"/>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二叉树" scheme="http://huris.xyz/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="对称" scheme="http://huris.xyz/tags/%E5%AF%B9%E7%A7%B0/"/>
    
  </entry>
  
  <entry>
    <title>反向传播算法</title>
    <link href="http://huris.xyz/2019/08/26/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/"/>
    <id>http://huris.xyz/2019/08/26/反向传播算法/</id>
    <published>2019-08-26T00:30:24.000Z</published>
    <updated>2019-08-26T06:24:20.211Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;卷积神经网络是一种特殊的前馈神经网络，通常也是一种深度神经网络。&lt;/p&gt;
&lt;p&gt;深度学习是在克服反向传播算法对深度神经网络的训练困难过程中逐步发展和建立起来的。而深度神经网络的基本学习训练方法是反向传播算法。&lt;/p&gt;
&lt;p&gt;作为一种有监督学习的算法，反向传播算法在本质上是一种具有递归结构的梯度下降算法，往往需要给定足够多的训练样本，才能获得满意的效果。&lt;/p&gt;
&lt;p&gt;下面先给出任意前馈神经网络的&lt;strong&gt;通用反向传播算法&lt;/strong&gt;，再讨论深层神经网络的&lt;strong&gt;逐层反向传播算法&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="反向传播" scheme="http://huris.xyz/tags/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>梯度下降算法</title>
    <link href="http://huris.xyz/2019/08/25/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95/"/>
    <id>http://huris.xyz/2019/08/25/梯度下降算法/</id>
    <published>2019-08-25T10:33:42.000Z</published>
    <updated>2019-08-26T06:24:29.740Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;梯度下降算法，又称为最速下降算法，是在无约束条件下计算连续可微函数极小值的基本方法。&lt;/p&gt;
&lt;p&gt;这种方法的核心思想是用负梯度方向作为下降方向，在1874年由法国科学家Cauchy提出。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="梯度下降" scheme="http://huris.xyz/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/"/>
    
  </entry>
  
  <entry>
    <title>激活函数</title>
    <link href="http://huris.xyz/2019/08/24/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/"/>
    <id>http://huris.xyz/2019/08/24/激活函数/</id>
    <published>2019-08-24T04:04:12.000Z</published>
    <updated>2019-08-25T00:23:31.883Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一些常见的激活函数&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="预备知识" scheme="http://huris.xyz/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="深度学习" scheme="http://huris.xyz/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="激活函数" scheme="http://huris.xyz/tags/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-26-删除排序数组中的重复项</title>
    <link href="http://huris.xyz/2019/08/24/leetcode-26-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/"/>
    <id>http://huris.xyz/2019/08/24/leetcode-26-删除排序数组中的重复项/</id>
    <published>2019-08-24T01:00:00.000Z</published>
    <updated>2019-08-24T09:19:54.730Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。&lt;/p&gt;
&lt;p&gt;不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定数组 nums = [1,1,2], &lt;/p&gt;
&lt;p&gt;函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 &lt;/p&gt;
&lt;p&gt;你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例2：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定 nums = [0,0,1,1,1,2,2,3,3,4],&lt;/p&gt;
&lt;p&gt;函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。&lt;/p&gt;
&lt;p&gt;你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;为什么返回数值是整数，但输出的答案是数组呢?&lt;/p&gt;
&lt;p&gt;请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。&lt;/p&gt;
&lt;p&gt;你可以想象内部操作如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝&lt;br&gt;int len = removeDuplicates(nums);&lt;/p&gt;
&lt;p&gt;// 在函数里修改输入数组对于调用者是可见的。&lt;br&gt;// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。&lt;br&gt;for (int i = 0; i &amp;lt; len; i++) {&lt;br&gt;   print(nums[i]);&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="http://huris.xyz/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://huris.xyz/tags/LeetCode/"/>
    
      <category term="算法与数据结构" scheme="http://huris.xyz/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="删除重复" scheme="http://huris.xyz/tags/%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D/"/>
    
  </entry>
  
</feed>
